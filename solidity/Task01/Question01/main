// SPDX-License-Identifier: MIT
pragma solidity ^0.8;

/*
1、创建一个名为Voting的合约，包含以下功能：
一个mapping来存储候选人的得票数
一个vote函数，允许用户投票给某个候选人
一个getVotes函数，返回某个候选人的得票数
一个resetVotes函数，重置所有候选人的得票数
*/
contract Voting{
    mapping(string  => uint256 ) public voteMapping;
    string[] public accountList;

    //在 Solidity 中，所有引用类型（如 string、bytes、array）的函数参数都必须指定数据位置（data location）
    //counts 是 uint256，是值类型（value type），不是引用类型，所以不需要指定数据位置
    function vote(string memory name,uint256 counts) public {
        voteMapping[name] = counts;//允许用户投票
        accountList.push(name);
    }

    //返回类型只写类型，不写数据位置，所以后面 的返参不需要加memory
    function getVotes(string memory name) public view returns (uint256){
        return voteMapping[name];
    }

    function resetVotes() public {
        //遍历所有账户，将票数重置为0
        for(uint i = 0; i < accountList.length; i++){
            voteMapping[accountList[i]] = 0;
        }
        //清空账户列表’
        accountList = new string[](0);
    }


}